version: '3.4'

services:
  postgres:
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: password
    networks:
      - default
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  postgres-adminer:
    networks:
      - default
    ports:
      - '8080:8080'
    restart: always

  rabbitmq:
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - default
    ports:
      - '5672:5672'
      - '15672:15672'
    restart: always
  jaeger:
    environment:
      - 'COLLECTOR_ZIPKIN_HOST_PORT=:9411'
    networks:
      - default
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14250:14250'
      - '14268:14268'
      - '14269:14269'
      - '9411:9411'

  loki-minio:
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      - MINIO_ACCESS_KEY=loki
      - MINIO_SECRET_KEY=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    networks:
      - default
    ports:
      - 9000
    volumes:
      - minio-data:/data

  loki:
    command: "-config.file=/etc/loki/config.yaml"
    networks:
      - default
    ports:
      - '3100:3100'
      - '7946:7946'
      - '9095:9095'
    volumes:
      - ./config/loki-config.yaml:/etc/loki/config.yaml

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
            secureJsonData:
              httpHeaderValue1: "tenant1"
        EOF
        /run.sh
    networks:
      - default
    ports:
      - "3000:3000"

networks:
  default:
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: "fd87:1f03:269c:327c::/112"
        - subnet: "10.50.124.0/24"

volumes:
  minio-data:
    driver: local
  postgresql-data:
    driver: local
